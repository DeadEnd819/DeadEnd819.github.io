{"version":3,"sources":["components/map/map.jsx"],"names":["Map","city","points","mapRef","useRef","useEffect","current","leaflet","map","center","lat","lng","zoom","tileLayer","attribution","addTo","forEach","point","customIcon","icon","iconUrl","IconMark","iconSize","marker","bindPopup","title","remove","className","id"],"mappings":"4HAAA,0DAgEeA,UA1DH,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OACZC,EAASC,mBAuCf,OArCAC,qBAAU,WAgCR,OA/BAF,EAAOG,QAAUC,IAAQC,IAAR,MAAmB,CAClCC,OAAQ,CACNC,IAAKT,EAAKS,IACVC,IAAKV,EAAKU,KAEZC,KAAMX,EAAKW,OAGbL,IACGM,UADH,2EACyF,CACrFC,YAAY,sJAEbC,MAAMZ,EAAOG,SAEhBJ,EAAOc,SAAQ,SAACC,GACd,IAAMC,EAAaX,IAAQY,KAAK,CAC9BC,QAASC,IACTC,SAAU,CAAC,GAAI,MAGjBf,IAAQgB,OAAO,CACXb,IAAKO,EAAMP,IACXC,IAAKM,EAAMN,KAEb,CACEQ,KAAMD,IAEPH,MAAMZ,EAAOG,SACbkB,UAAUP,EAAMQ,UAGd,WACLtB,EAAOG,QAAQoB,YAEhB,IAGD,qBAAKC,UAAU,wBAAwBC,GAAG","file":"static/js/15.11dbf2c7.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport leaflet from 'leaflet';\nimport PropTypes from 'prop-types';\nimport IconMark from '../../assets/img/svg/icon-map-mark.svg';\nimport 'leaflet/dist/leaflet.css';\n\nconst Map = ({city, points}) => {\n  const mapRef = useRef();\n\n  useEffect(() => {\n    mapRef.current = leaflet.map(`map`, {\n      center: {\n        lat: city.lat,\n        lng: city.lng\n      },\n      zoom: city.zoom\n    });\n\n    leaflet\n      .tileLayer(`https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png`, {\n        attribution: `&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>`\n      })\n      .addTo(mapRef.current);\n\n    points.forEach((point) => {\n      const customIcon = leaflet.icon({\n        iconUrl: IconMark,\n        iconSize: [35, 40]\n      });\n\n      leaflet.marker({\n          lat: point.lat,\n          lng: point.lng\n        },\n        {\n          icon: customIcon\n        })\n        .addTo(mapRef.current)\n        .bindPopup(point.title);\n    });\n\n    return () => {\n      mapRef.current.remove();\n    };\n  }, []);\n\n  return (\n    <div className=\"branches__map-wrapper\" id=\"map\" />\n  );\n}\n\nMap.propTypes = {\n  city: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n    zoom: PropTypes.number.isRequired,\n  }),\n  points: PropTypes.arrayOf(PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }))\n};\n\nexport default Map;\n"],"sourceRoot":""}