{"version":3,"sources":["hooks/useWindowDimensions.js","components/dots/dots.jsx","components/tabs-item/tabs-item.jsx","components/services/services.jsx"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Dots","className","slides","active","map","_","index","TabsItem","id","tab","activeIndex","onTabClick","type","aria-label","onClick","Services","activeTab","setActiveTab","isDesktop","services","SERVICES","promo","title","list","item","description","link","href","handleTabChange","target","Object","values","TabNames","i","selectedItem","showStatus","showArrows","showIndicators","autoFocus","autoPlay","interval","transitionTime","infiniteLoop","swipeable","emulateTouch","onChange"],"mappings":"8IAEMA,EAAsB,WAC1B,MAAiDC,OAEjD,MAAO,CACLC,MAHF,EAAOC,WAILC,OAJF,EAA0BC,cAuBbC,IAfa,WAC1B,MAAgDC,mBAASP,KAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KAWA,OATAC,qBAAU,WACR,IAAMC,EAAe,WACnBF,EAAoBT,MAItB,OADAC,OAAOW,iBAAiB,SAAUD,GAC3B,kBAAMV,OAAOY,oBAAoB,SAAUF,MACjD,IAEIH,I,gCCvBT,gBAiBeM,IAfF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAChC,OACE,oBAAIF,UAAS,UAAKA,EAAL,eAAb,SACGC,EAAOE,KAAI,SAACC,EAAGC,GACd,OACE,oBACEL,UAAS,mBAAcK,IAAUH,EAAV,0BADzB,cAEcG,W,iFCkBTC,EAxBE,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,GAAIC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,YAAaT,EAA2B,EAA3BA,UAAWU,EAAgB,EAAhBA,WAClD,OACE,oBAAIV,UAAU,aAAd,SACE,wBACEA,UAAS,mCAA8BA,EAA9B,YAA2CS,IAAgBF,EAAhB,2BACpDA,GAAIA,EACJI,KAAK,SACLC,aAAA,2DAAwBJ,GACxBK,QAASH,EALX,SAOGF,O,eCqFMM,UAjEE,WACf,MAAkCtB,mBAAS,GAA3C,mBAAOuB,EAAP,KAAkBC,EAAlB,KAIMC,EAFU1B,cAATJ,MAEmB,KACpB+B,EA/BCC,IAAShB,KAAI,SAACiB,GACnB,OACE,sBAAiBpB,UAAS,0DAAqDoB,EAAMpB,UAA3D,cAA1B,UACE,oBAAIA,UAAS,iDAA4CoB,EAAMpB,WAA/D,SAA6EoB,EAAMC,QACnF,oBAAIrB,UAAS,+CAA0CoB,EAAMpB,WAA7D,SAEIoB,EAAME,KAAKnB,KAAI,SAACoB,GAAD,OACb,oBAAevB,UAAU,qBAAzB,SACGuB,GADMA,QAMdH,EAAMI,YAELJ,EAAMK,MACN,mBAAGzB,UAAS,+CAA0CoB,EAAMpB,WAAa0B,KAAMN,EAAMK,KAAKC,KAA1F,SACGN,EAAMK,KAAKJ,UAfRD,MA+BRO,EAAkB,SAACnB,GACnBA,EAAIoB,OACNZ,GAAcR,EAAIoB,OAAOrB,IAG3BS,EAAaR,IAGf,OACE,yBAASR,UAAU,0BAAnB,SAEIiB,EACE,sBAAKjB,UAAU,sBAAf,UACE,oBAAIA,UAAU,aAAd,SACG6B,OAAOC,OAAOC,KAAU5B,KAAI,SAACK,EAAKwB,GAAN,OAC3B,cAAC,EAAD,CAEEzB,GAAIyB,EACJxB,IAAKA,EACLC,YAAaM,EACbf,UAAWmB,IAASa,GAAGhC,UACvBU,WAAYiB,GANd,UACUK,EADV,YACexB,SASlBU,EAASH,MAGZ,qCACE,cAAC,WAAD,CACEkB,aAAclB,EACdmB,YAAY,EACZC,YAAY,EACZC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,SAAU,MACVC,eAAgB,KAChBC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,SAAUjB,EAZZ,SAcGT,IAGH,cAAC,IAAD,CACElB,UAAS,WACTC,OAAQiB,EACRhB,OAAQa","file":"static/js/services.ffa016c4.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst getWindowDimensions = () => {\r\n  const {innerWidth: width, innerHeight: height} = window;\r\n\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n};\r\n\r\nconst useWindowDimensions = () => {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowDimensions(getWindowDimensions());\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n};\r\n\r\nexport default useWindowDimensions;\r\n","import React from 'react';\n\nconst Dots = ({className, slides, active}) => {\n  return (\n    <ul className={`${className}__dots dots`}>\n      {slides.map((_, index) => {\n        return (\n          <li\n            className={`dots__dot${index === active ? ` dots__dot--active` : ``}`}\n            key={`dot-${index}`}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Dots;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst TabsItem = ({id, tab, activeIndex, className, onTabClick}) => {\n  return (\n    <li className=\"tabs__item\">\n      <button\n        className={`tabs__button tabs__button${className} ${activeIndex === id ? `tabs__button--active` : ``}`}\n        id={id}\n        type=\"button\"\n        aria-label={`Показать ${tab}`}\n        onClick={onTabClick}\n      >\n        {tab}\n      </button>\n    </li>\n  );\n};\n\nTabsItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  tab: PropTypes.string.isRequired,\n  activeIndex: PropTypes.number.isRequired,\n  className: PropTypes.string.isRequired,\n  onTabClick: PropTypes.func.isRequired,\n};\n\nexport default TabsItem;\n","import React, {useState} from 'react';\nimport {Carousel as Slider} from 'react-responsive-carousel';\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\nimport TabsItem from '../tabs-item/tabs-item';\nimport Dots from '../dots/dots';\nimport {SERVICES, TabNames} from '../../const';\n\nconst getServices = () => {\n  return SERVICES.map((promo) => {\n    return (\n      <div key={promo} className={`services__card-service card-service card-service${promo.className} container`}>\n        <h2 className={`card-service__title card-service__title${promo.className}`}>{promo.title}</h2>\n        <ul className={`card-service__list card-service__list${promo.className}`}>\n          {\n            promo.list.map((item) =>\n              <li key={item} className=\"card-service__item\">\n                {item}\n              </li>\n            )\n          }\n        </ul>\n        {promo.description}\n        {\n          promo.link &&\n          <a className={`card-service__link card-service__link${promo.className}`} href={promo.link.href}>\n            {promo.link.title}\n          </a>\n        }\n      </div>\n    );\n  });\n};\n\nconst Services = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  const {width} = useWindowDimensions();\n\n  const isDesktop = width > 1023;\n  const services = getServices();\n\n  const handleTabChange = (tab) => {\n    if (tab.target) {\n      setActiveTab(+tab.target.id );\n      return;\n    }\n    setActiveTab(tab);\n  };\n\n  return (\n    <section className=\"main__services services\">\n      {\n        isDesktop ?\n          <div className=\"services__tabs tabs\">\n            <ul className=\"tabs__list\">\n              {Object.values(TabNames).map((tab, i) =>\n                <TabsItem\n                  key={`${i}-${tab}`}\n                  id={i}\n                  tab={tab}\n                  activeIndex={activeTab}\n                  className={SERVICES[i].className}\n                  onTabClick={handleTabChange} />\n              )}\n            </ul>\n\n            {services[activeTab]}\n          </div>\n          :\n          <>\n            <Slider\n              selectedItem={activeTab}\n              showStatus={false}\n              showArrows={false}\n              showIndicators={false}\n              autoFocus={false}\n              autoPlay={false}\n              interval={86400000}\n              transitionTime={1500}\n              infiniteLoop={true}\n              swipeable={true}\n              emulateTouch={true}\n              onChange={handleTabChange}\n            >\n              {services}\n            </Slider>\n\n            <Dots\n              className={`services`}\n              slides={services}\n              active={activeTab}\n            />\n          </>\n      }\n    </section>\n  );\n};\n\nexport default Services;\n"],"sourceRoot":""}