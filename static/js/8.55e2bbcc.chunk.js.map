{"version":3,"sources":["components/offer/offer.jsx"],"names":["Offer","creditData","offerData","setOffer","feedbackOpen","type","credit","contribution","time","maternal","casco","insurance","total","rate","payment","income","maternalValue","MATERNAL","totalValue","rateValue","CreditTypes","HOME","getHomeRate","CAR","getCarRate","getRateValue","monthlyRate","getMonthlyRate","paymentValue","getAnnuityPayment","incomeValue","getIncome","useEffect","className","MinimumCredit","splittingDigits","getComma","aria-label","onClick","connect","store","getCredit","getOffer","dispatch","data","setFeedbackOpen"],"mappings":"2HAAA,kGAeMA,EAAQ,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,aACxCC,EAAgEJ,EAAhEI,KAAMC,EAA0DL,EAA1DK,OAAQC,EAAkDN,EAAlDM,aAAcC,EAAoCP,EAApCO,KAAMC,EAA8BR,EAA9BQ,SAAUC,EAAoBT,EAApBS,MAAOC,EAAaV,EAAbU,UACnDC,EAAgCV,EAAhCU,MAAOC,EAAyBX,EAAzBW,KAAMC,EAAmBZ,EAAnBY,QAASC,EAAUb,EAAVa,OAavBC,EAAgBP,EAAWQ,IAAW,EACtCC,EAAaZ,EAASC,EAAeS,EACrCG,EAbe,WACnB,OAAQd,GACN,KAAKe,IAAYC,KACf,OAAOC,YAAYf,EAAcD,GACnC,KAAKc,IAAYG,IACf,OAAOC,YAAWlB,EAAQI,EAAOC,GACnC,QACE,OAAO,MAMKc,GACZC,EAAcC,YAAeR,GAC7BS,EAAeC,YAAkBX,EAAYQ,EAAalB,GAC1DsB,EAAcC,YAAUH,GAW9B,OATAI,qBAAU,WACR7B,EAAS,CACPS,MAAOM,EACPL,KAAMM,EACNL,QAASc,EACTb,OAAQe,MAET,CAACA,EAAaX,EAAWS,EAAcV,EAAYf,IAGpD,qBAAK8B,UAAU,+BAAf,SAEIf,GAAcgB,IAAc7B,GAC1B,qCACE,oBAAI4B,UAAU,eAAd,yGACA,sBAAKA,UAAU,iBAAf,UACE,qBAAIA,UAAU,cAAd,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,eAAd,UAA8BE,YAAgBvB,GAA9C,2CACA,qBAAIqB,UAAU,cAAd,4CACS5B,IAASe,IAAYC,KAArB,wHAGX,sBAAKY,UAAU,cAAf,UACE,qBAAIA,UAAU,eAAd,UAA8BG,YAASvB,GAAvC,OACA,oBAAIoB,UAAU,cAAd,kHAEF,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,eAAd,UAA8BE,YAAgBrB,GAA9C,2CACA,oBAAImB,UAAU,cAAd,wHAEF,sBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,eAAd,UAA8BE,YAAgBpB,GAA9C,2CACA,oBAAIkB,UAAU,cAAd,qHAGJ,wBACEA,UAAU,gBACV5B,KAAK,SACLgC,aAAW,iHACXC,QAAS,kBAAMlC,KAJjB,yGAWJ,qCACE,oBAAI6B,UAAU,qCAAd,kIAGM5B,IAASe,IAAYC,KAArB,8HAHN,6GAIqBc,YAAgBD,IAAc7B,IAJnD,4CAOA,mBAAG4B,UAAU,qBAAb,oTAuBGM,uBAhBS,SAACC,GAAD,MAAY,CAClCvC,WAAYwC,YAAUD,GACtBtC,UAAWwC,YAASF,OAGK,SAACG,GAAD,MAAe,CACxCxC,SADwC,SAC/ByC,GACPD,EAASxC,YAASyC,KAEpBxC,aAJwC,WAKtCuC,EAASE,mBAMEN,CAA6CvC","file":"static/js/8.55e2bbcc.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {getCredit, getOffer} from '../../store/selectors';\nimport {setOffer, setFeedbackOpen} from '../../store/action';\nimport {CreditTypes, MinimumCredit, MATERNAL} from '../../const';\nimport {\n  splittingDigits,\n  getComma,\n  getAnnuityPayment,\n  getIncome,\n  getMonthlyRate,\n  getCarRate,\n  getHomeRate\n} from '../../utils';\n\nconst Offer = ({creditData, offerData, setOffer, feedbackOpen}) => {\n  const {type, credit, contribution, time, maternal, casco, insurance} = creditData;\n  const {total, rate, payment, income} = offerData;\n\n  const getRateValue = () => {\n    switch (type) {\n      case CreditTypes.HOME:\n        return getHomeRate(contribution, credit);\n      case CreditTypes.CAR:\n        return getCarRate(credit, casco, insurance);\n      default:\n        return null;\n    }\n  };\n\n  const maternalValue = maternal ? MATERNAL : 0;\n  const totalValue = credit - contribution - maternalValue;\n  const rateValue = getRateValue();\n  const monthlyRate = getMonthlyRate(rateValue);\n  const paymentValue = getAnnuityPayment(totalValue, monthlyRate, time);\n  const incomeValue = getIncome(paymentValue);\n\n  useEffect(() => {\n    setOffer({\n      total: totalValue,\n      rate: rateValue,\n      payment: paymentValue,\n      income: incomeValue,\n    });\n  }, [incomeValue, rateValue, paymentValue, totalValue, setOffer]);\n\n  return (\n    <div className=\"form-calculator__offer offer\">\n      {\n        totalValue >= MinimumCredit[type] ?\n          <>\n            <h3 className=\"offer__title\">Наше предложение</h3>\n            <div className=\"offer__wrapper\">\n              <dl className=\"offer__list\">\n                <div className=\"offer__item\">\n                  <dt className=\"offer__value\">{splittingDigits(total)} рублей</dt>\n                  <dd className=\"offer__name\">\n                    Сумма {type === CreditTypes.HOME ? `ипотеки` : `автокредита`}\n                  </dd>\n                </div>\n                <div className=\"offer__item\">\n                  <dt className=\"offer__value\">{getComma(rate)}%</dt>\n                  <dd className=\"offer__name\">Процентная ставка</dd>\n                </div>\n                <div className=\"offer__item\">\n                  <dt className=\"offer__value\">{splittingDigits(payment)} рублей</dt>\n                  <dd className=\"offer__name\">Ежемесячный платеж</dd>\n                </div>\n                <div className=\"offer__item\">\n                  <dt className=\"offer__value\">{splittingDigits(income)} рублей</dt>\n                  <dd className=\"offer__name\">Необходимый доход</dd>\n                </div>\n              </dl>\n              <button\n                className=\"offer__button\"\n                type=\"button\"\n                aria-label=\"Открыть форму заявки\"\n                onClick={() => feedbackOpen()}\n              >\n                Оформить заявку\n              </button>\n            </div>\n          </>\n          :\n          <>\n            <h3 className=\"offer__title offer__title--failure\">\n              {\n                `Наш банк не выдаёт\n                ${type === CreditTypes.HOME ? `ипотечные` : `автокредиты`}\n                кредиты меньше ${splittingDigits(MinimumCredit[type])} рублей.`\n              }\n            </h3>\n            <p className=\"offer__description\">Попробуйте использовать другие параметры для расчёта.</p>\n          </>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = (store) => ({\n  creditData: getCredit(store),\n  offerData: getOffer(store),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setOffer(data) {\n    dispatch(setOffer(data));\n  },\n  feedbackOpen() {\n    dispatch(setFeedbackOpen());\n  },\n});\n\nexport {Offer};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Offer);\n"],"sourceRoot":""}