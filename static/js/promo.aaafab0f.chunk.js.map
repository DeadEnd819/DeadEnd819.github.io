{"version":3,"sources":["components/dots/dots.jsx","components/slider/slider.jsx","components/promo-slider/promo-slider.jsx"],"names":["Dots","className","slides","active","map","_","index","Slider","option","onChange","activeItem","dotClassName","showStatus","showArrows","showIndicators","showThumbs","infiniteLoop","swipeable","emulateTouch","selectedItem","PromoSlider","isWebp","useState","activeIndex","setActiveIndex","PROMOS","promo","description","link","href","title","getSlides","promoSliderOptions","indexSlide"],"mappings":"oJAwBeA,EArBF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAChC,OACE,oBAAIF,UAAS,UAAKA,EAAL,eAAb,SACGC,EAAOE,KAAI,SAACC,EAAGC,GACd,OACE,oBACEL,UAAS,mBAAcK,IAAUH,EAAV,0BADzB,cAEcG,U,cCkCTC,IArCA,SAAC,GAA0D,IAAzDC,EAAwD,EAAxDA,OAAQN,EAAgD,EAAhDA,OAAQO,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aACrD,OACE,qCACE,cAAC,WAAD,2BACMH,GADN,IAEEI,YAAY,EACZC,YAAY,EACZC,gBAAgB,EAChBC,YAAY,EACZC,cAAc,EACdC,WAAW,EACXC,cAAc,EACdC,aAAcT,EACdD,SAAUA,EAVZ,SAYGP,KAGH,cAAC,EAAD,CACED,UAAWU,EACXT,OAAQA,EACRC,OAAQO,S,gFCuBDU,UA3BK,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACpB,EAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMtB,EAtBU,SAACmB,GACjB,OAAOI,IAAOrB,KAAI,SAACsB,GACjB,OACE,yBAAqBzB,UAAS,yCAAoCyB,EAAMzB,WAAxE,SACE,sBAAKA,UAAS,uCAAkCyB,EAAMzB,WAAxC,OAAoDoB,EAAM,WAA1D,cAAd,UACE,oBAAIpB,UAAS,mCAA8ByB,EAAMzB,WAAjD,+DACA,mBAAGA,UAAS,+CAA0CyB,EAAMzB,WAA5D,SAA0EyB,EAAMC,cAE9ED,EAAME,MACN,mBAAG3B,UAAS,iCAA4ByB,EAAMzB,WAAa4B,KAAMH,EAAME,KAAKC,KAA5E,SACGH,EAAME,KAAKE,YAPNJ,MAmBHK,CAAUV,GAMzB,OACE,0BAASpB,UAAU,kCAAnB,UACE,oBAAIA,UAAU,kBAAd,+GACA,cAAC,IAAD,CACEO,OAAQwB,IACR9B,OAAQA,EACRO,SAVoB,SAACwB,GACzBT,EAAeS,IAUXvB,WAAYa,EACZZ,aAAY","file":"static/js/promo.aaafab0f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Dots = ({className, slides, active}) => {\n  return (\n    <ul className={`${className}__dots dots`}>\n      {slides.map((_, index) => {\n        return (\n          <li\n            className={`dots__dot${index === active ? ` dots__dot--active` : ``}`}\n            key={`dot-${index}`}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nDots.propTypes = {\n  className: PropTypes.string.isRequired,\n  slides: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  active: PropTypes.number.isRequired,\n};\n\nexport default Dots;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dots from '../dots/dots';\nimport {Carousel} from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\n\n\nconst Slider = ({option, slides, onChange, activeItem, dotClassName}) => {\n  return (\n    <>\n      <Carousel\n        {...option}\n        showStatus={false}\n        showArrows={false}\n        showIndicators={false}\n        showThumbs={false}\n        infiniteLoop={true}\n        swipeable={true}\n        emulateTouch={true}\n        selectedItem={activeItem}\n        onChange={onChange}\n      >\n        {slides}\n      </Carousel>\n\n      <Dots\n        className={dotClassName}\n        slides={slides}\n        active={activeItem}\n      />\n    </>\n  );\n};\n\nSlider.propTypes = {\n  option: PropTypes.object.isRequired,\n  slides: PropTypes.arrayOf(\n    PropTypes.object.isRequired\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  activeItem: PropTypes.number.isRequired,\n  dotClassName: PropTypes.string.isRequired,\n};\n\nexport default Slider;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from '../slider/slider';\nimport {PROMOS, promoSliderOptions} from '../../const';\n\nconst getSlides = (isWebp) => {\n  return PROMOS.map((promo) => {\n    return (\n      <article key={promo} className={`promo-slider__promo promo promo${promo.className}`}>\n        <div className={`promo__wrapper promo__wrapper${promo.className}${isWebp ? `-webp` : ``} container`}>\n          <h2 className={`promo__title promo__title${promo.className}`}>Лига Банк</h2>\n          <p className={`promo__description promo__description${promo.className}`}>{promo.description}</p>\n          {\n            promo.link &&\n            <a className={`promo__link promo__link${promo.className}`} href={promo.link.href}>\n              {promo.link.title}\n            </a>\n          }\n        </div>\n      </article>\n    );\n  });\n};\n\nconst PromoSlider = ({isWebp}) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const slides = getSlides(isWebp);\n\n  const handleSlideChange = (indexSlide) => {\n    setActiveIndex(indexSlide);\n  };\n\n  return (\n    <section className=\"main__promo-slider promo-slider\">\n      <h2 className=\"visually-hidden\">Промо предложения</h2>\n      <Slider\n        option={promoSliderOptions}\n        slides={slides}\n        onChange={handleSlideChange}\n        activeItem={activeIndex}\n        dotClassName={`promo-slider`}\n      />\n    </section>\n  );\n};\n\nPromoSlider.propTypes = {\n  isWebp: PropTypes.bool.isRequired,\n};\n\nexport default PromoSlider;\n"],"sourceRoot":""}